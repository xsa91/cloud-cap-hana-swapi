{
  "openapi": "3.0.2",
  "info": {
    "title": "Service for namespace StarWarsPlanet",
    "description": "This service is located at [/StarWarsPlanet/](/StarWarsPlanet/)\n\n## Entity Data Model\n![ER Diagram](https://yuml.me/diagram/class/[Planet{bg:lightslategray}],[Planet]0..1-*[Film2Planets],[Planet]++-0..1>[DraftAdministrativeData],[Planet]-0..1>[Planet],[People{bg:lightslategray}],[People]-0..1>[Planet],[People]0..1-*[Film2People],[Film{bg:lightslategray}],[Film]0..1-*[Film2People],[Film2Planets{bg:lightslategray}],[Film2Planets]*-0..1[Film],[Film2Planets]++-0..1>[DraftAdministrativeData],[Film2Planets]-0..1>[Film2Planets],[Planet2People{bg:lightslategray}],[Planet2People]*-0..1[Planet],[Planet2People]-0..1>[People],[Planet2People]++-0..1>[DraftAdministrativeData],[Planet2People]-0..1>[Planet2People],[climate{bg:lightslategray}],[terrain{bg:lightslategray}],[Film2People{bg:lightslategray}],[Species2People{bg:lightslategray}],[Species2People]*-0..1[People],[Vehicle2Pilot{bg:lightslategray}],[Vehicle2Pilot]*-0..1[People],[Starship2Pilot{bg:lightslategray}],[Starship2Pilot]*-0..1[People],[Film2Starships{bg:lightslategray}],[Film2Starships]*-0..1[Film],[Film2Vehicles{bg:lightslategray}],[Film2Vehicles]*-0..1[Film],[Film2Species{bg:lightslategray}],[Film2Species]*-0..1[Film],[Vehicles{bg:lightslategray}],[Vehicles]0..1-*[Film2Vehicles],[Vehicles]0..1-*[Vehicle2Pilot],[Starship{bg:lightslategray}],[Starship]0..1-*[Film2Starships],[Starship]0..1-*[Starship2Pilot],[DraftAdministrativeData{bg:lightslategray}],[Starship%20{bg:lawngreen}]++-*>[Starship],[Vehicles%20{bg:lawngreen}]++-*>[Vehicles],[Film2Species%20{bg:lawngreen}]++-*>[Film2Species],[Film2Vehicles%20{bg:lawngreen}]++-*>[Film2Vehicles],[Film2Starships%20{bg:lawngreen}]++-*>[Film2Starships],[Starship2Pilot%20{bg:lawngreen}]++-*>[Starship2Pilot],[Vehicle2Pilot%20{bg:lawngreen}]++-*>[Vehicle2Pilot],[Species2People%20{bg:lawngreen}]++-*>[Species2People],[Film2People%20{bg:lawngreen}]++-*>[Film2People],[terrain%20{bg:lawngreen}]++-*>[terrain],[climate%20{bg:lawngreen}]++-*>[climate],[Planet2People%20{bg:lawngreen}]++-*>[Planet2People],[Film2Planets%20{bg:lawngreen}]++-*>[Film2Planets],[Film%20{bg:lawngreen}]++-*>[Film],[People%20{bg:lawngreen}]++-*>[People],[Planet%20{bg:lawngreen}]++-*>[Planet])\n\n### Legend\n![Legend](https://yuml.me/diagram/plain;dir:TB;scale:60/class/[External.Type{bg:whitesmoke}],[ComplexType],[EntityType{bg:lightslategray}],[EntitySet/Singleton/Operation{bg:lawngreen}])",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.0",
  "x-sap-shortText": "Service for namespace StarWarsPlanet",
  "servers": [
    {
      "url": "/StarWarsPlanet"
    }
  ],
  "tags": [
    {
      "name": "{i18n>Film}",
      "description": "All Films in the Star Wars Skywalker Saga"
    },
    {
      "name": "{i18n>People}",
      "description": "All People and Aliens in Star Wars"
    },
    {
      "name": "{i18n>Planet}",
      "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
    },
    {
      "name": "{i18n>Planet}",
      "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
    },
    {
      "name": "{i18n>Planet}",
      "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
    },
    {
      "name": "{i18n>Starship}",
      "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
    },
    {
      "name": "{i18n>Vehicles}",
      "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
    },
    {
      "name": "Film2People",
      "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
    },
    {
      "name": "Film2Planets",
      "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
    },
    {
      "name": "Film2Species",
      "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
    },
    {
      "name": "Film2Starships",
      "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
    },
    {
      "name": "Film2Vehicles",
      "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
    },
    {
      "name": "Planet2People",
      "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
    },
    {
      "name": "Species2People",
      "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
    },
    {
      "name": "Starship2Pilot",
      "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
    },
    {
      "name": "Vehicle2Pilot",
      "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
    }
  ],
  "paths": {
    "/$batch": {
      "post": {
        "summary": "Send a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Planet HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film": {
      "get": {
        "summary": "Retrieve a list of film.",
        "tags": [
          "{i18n>Film}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "title",
                  "title desc",
                  "episode_id",
                  "episode_id desc",
                  "opening_crawl",
                  "opening_crawl desc",
                  "director",
                  "director desc",
                  "producer",
                  "producer desc",
                  "release_date",
                  "release_date desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "episode_id",
                  "opening_crawl",
                  "director",
                  "producer",
                  "release_date"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "characters",
                  "planets",
                  "starships",
                  "vehicles",
                  "species"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single film.",
        "tags": [
          "{i18n>Film}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "episode_id",
                  "opening_crawl",
                  "director",
                  "producer",
                  "release_date"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "characters",
                  "planets",
                  "starships",
                  "vehicles",
                  "species"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film({ID})/characters": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of characters of a {i18n> film}.",
        "tags": [
          "{i18n>Film}",
          "Film2People"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "people_ID",
                  "people_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "people_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "people"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved characters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2People",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2People"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single character of a {i18n> film}.",
        "tags": [
          "{i18n>Film}",
          "Film2People"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2People-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created character",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film({ID})/planets": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of planets of a {i18n> film}.",
        "tags": [
          "{i18n>Film}",
          "Film2Planets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "planet_ID",
                  "planet_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "planet_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "planet",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved planets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Planets",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single planet of a {i18n> film}.",
        "tags": [
          "{i18n>Film}",
          "Film2Planets"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created planet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film({ID})/species": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of species of a {i18n> film}.",
        "tags": [
          "{i18n>Film}",
          "Film2Species"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "specie_ID",
                  "specie_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "specie_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved species",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Species",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Species"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single species of a {i18n> film}.",
        "tags": [
          "{i18n>Film}",
          "Film2Species"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Species-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created species",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Species"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film({ID})/starships": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of starships of a {i18n> film}.",
        "tags": [
          "{i18n>Film}",
          "Film2Starships"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "starship_ID",
                  "starship_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "starship_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "starship"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved starships",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Starships",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single starship of a {i18n> film}.",
        "tags": [
          "{i18n>Film}",
          "Film2Starships"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created starship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film({ID})/vehicles": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of vehicles of a {i18n> film}.",
        "tags": [
          "{i18n>Film}",
          "Film2Vehicles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "vehicle_ID",
                  "vehicle_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "vehicle_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "vehicle"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved vehicles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Vehicles",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single vehicle of a {i18n> film}.",
        "tags": [
          "{i18n>Film}",
          "Film2Vehicles"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2People": {
      "get": {
        "summary": "Retrieve a list of film2 people.",
        "tags": [
          "Film2People"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "people_ID",
                  "people_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "people_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "people"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film2 people",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2People",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2People"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single film2 person.",
        "tags": [
          "Film2People"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2People-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created film2 person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2People({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single film2 person.",
        "tags": [
          "Film2People"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "people_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "people"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film2 person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single film2 person.",
        "tags": [
          "Film2People"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2People-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single film2 person.",
        "tags": [
          "Film2People"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2People({ID})/film": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve film of a film2 person.",
        "tags": [
          "Film2People",
          "{i18n>Film}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "episode_id",
                  "opening_crawl",
                  "director",
                  "producer",
                  "release_date"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "characters",
                  "planets",
                  "starships",
                  "vehicles",
                  "species"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2People({ID})/people": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve people of a film2 person.",
        "tags": [
          "Film2People",
          "{i18n>People}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "height",
                  "mass",
                  "hair_color",
                  "skin_color",
                  "eye_color",
                  "birth_year",
                  "gender",
                  "scoundrel",
                  "homeworld_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "homeworld",
                  "films",
                  "species",
                  "vehicles",
                  "starships"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved people",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Planets": {
      "get": {
        "summary": "Retrieve a list of film2 planets.",
        "tags": [
          "Film2Planets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "planet_ID",
                  "planet_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "planet_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "planet",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film2 planets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Planets",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single film2 planet.",
        "tags": [
          "Film2Planets"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created film2 planet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Planets(ID={ID},IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single film2 planet.",
        "tags": [
          "Film2Planets"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "planet_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "planet",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film2 planet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single film2 planet.",
        "tags": [
          "Film2Planets"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single film2 planet.",
        "tags": [
          "Film2Planets"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Planets(ID={ID},IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve draft administrative data of a film2 planet.",
        "tags": [
          "Film2Planets"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change draft administrative data of a film2 planet.",
        "tags": [
          "Film2Planets"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete draft administrative data of a film2 planet.",
        "tags": [
          "Film2Planets"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Planets(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve sibling entity of a film2 planet.",
        "tags": [
          "Film2Planets"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "planet_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "planet",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Planets(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/StarWarsPlanet.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "Film2Planets"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Film2Planets(ID={ID},IsActiveEntity='{IsActiveEntity}')/StarWarsPlanet.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "Film2Planets"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Film2Planets(ID={ID},IsActiveEntity='{IsActiveEntity}')/film": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve film of a film2 planet.",
        "tags": [
          "Film2Planets",
          "{i18n>Film}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "episode_id",
                  "opening_crawl",
                  "director",
                  "producer",
                  "release_date"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "characters",
                  "planets",
                  "starships",
                  "vehicles",
                  "species"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Planets(ID={ID},IsActiveEntity='{IsActiveEntity}')/planet": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve planet of a film2 planet.",
        "tags": [
          "Film2Planets",
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "diameter",
                  "rotation_period",
                  "orbital_period",
                  "gravity",
                  "population",
                  "climate",
                  "terrain",
                  "surface_water",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "residents",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved planet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Planets(ID={ID},IsActiveEntity='{IsActiveEntity}')/planet/StarWarsPlanet.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "Film2Planets"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/Film2Planets(ID={ID},IsActiveEntity='{IsActiveEntity}')/planet/StarWarsPlanet.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "Film2Planets"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Film2Planets(ID={ID},IsActiveEntity='{IsActiveEntity}')/planet/StarWarsPlanet.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "Film2Planets"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Film2Species": {
      "get": {
        "summary": "Retrieve a list of film2 species.",
        "tags": [
          "Film2Species"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "specie_ID",
                  "specie_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "specie_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film2 species",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Species",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Species"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single film2 specy.",
        "tags": [
          "Film2Species"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Species-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created film2 specy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Species"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Species({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single film2 specy.",
        "tags": [
          "Film2Species"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "specie_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film2 specy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Species"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single film2 specy.",
        "tags": [
          "Film2Species"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Species-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single film2 specy.",
        "tags": [
          "Film2Species"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Species({ID})/film": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve film of a film2 specy.",
        "tags": [
          "Film2Species",
          "{i18n>Film}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "episode_id",
                  "opening_crawl",
                  "director",
                  "producer",
                  "release_date"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "characters",
                  "planets",
                  "starships",
                  "vehicles",
                  "species"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Starships": {
      "get": {
        "summary": "Retrieve a list of film2 starships.",
        "tags": [
          "Film2Starships"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "starship_ID",
                  "starship_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "starship_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "starship"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film2 starships",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Starships",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single film2 starship.",
        "tags": [
          "Film2Starships"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created film2 starship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Starships({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single film2 starship.",
        "tags": [
          "Film2Starships"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "starship_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "starship"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film2 starship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single film2 starship.",
        "tags": [
          "Film2Starships"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single film2 starship.",
        "tags": [
          "Film2Starships"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Starships({ID})/film": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve film of a film2 starship.",
        "tags": [
          "Film2Starships",
          "{i18n>Film}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "episode_id",
                  "opening_crawl",
                  "director",
                  "producer",
                  "release_date"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "characters",
                  "planets",
                  "starships",
                  "vehicles",
                  "species"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Starships({ID})/starship": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve starship of a film2 starship.",
        "tags": [
          "Film2Starships",
          "{i18n>Starship}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "model",
                  "starship_class",
                  "manufacturer",
                  "cost_in_credits",
                  "length",
                  "crew",
                  "passengers",
                  "max_atmosphering_speed",
                  "hyperdrive_rating",
                  "MGLT",
                  "cargo_capacity",
                  "consumables"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "pilots"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved starship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Starship"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Vehicles": {
      "get": {
        "summary": "Retrieve a list of film2 vehicles.",
        "tags": [
          "Film2Vehicles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "vehicle_ID",
                  "vehicle_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "vehicle_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "vehicle"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film2 vehicles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Vehicles",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single film2 vehicle.",
        "tags": [
          "Film2Vehicles"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created film2 vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Vehicles({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single film2 vehicle.",
        "tags": [
          "Film2Vehicles"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "vehicle_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "vehicle"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film2 vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single film2 vehicle.",
        "tags": [
          "Film2Vehicles"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single film2 vehicle.",
        "tags": [
          "Film2Vehicles"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Vehicles({ID})/film": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve film of a film2 vehicle.",
        "tags": [
          "Film2Vehicles",
          "{i18n>Film}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "episode_id",
                  "opening_crawl",
                  "director",
                  "producer",
                  "release_date"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "characters",
                  "planets",
                  "starships",
                  "vehicles",
                  "species"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Film2Vehicles({ID})/vehicle": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve vehicle of a film2 vehicle.",
        "tags": [
          "Film2Vehicles",
          "{i18n>Vehicles}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "model",
                  "vehicle_class",
                  "manufacturer",
                  "cost_in_credits",
                  "length",
                  "crew",
                  "passengers",
                  "max_atmosphering_speed",
                  "cargo_capacity",
                  "consumables"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "pilots"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Vehicles"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People": {
      "get": {
        "summary": "Retrieve a list of people.",
        "tags": [
          "{i18n>People}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "name",
                  "name desc",
                  "height",
                  "height desc",
                  "mass",
                  "mass desc",
                  "hair_color",
                  "hair_color desc",
                  "skin_color",
                  "skin_color desc",
                  "eye_color",
                  "eye_color desc",
                  "birth_year",
                  "birth_year desc",
                  "gender",
                  "gender desc",
                  "scoundrel",
                  "scoundrel desc",
                  "homeworld_ID",
                  "homeworld_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "height",
                  "mass",
                  "hair_color",
                  "skin_color",
                  "eye_color",
                  "birth_year",
                  "gender",
                  "scoundrel",
                  "homeworld_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "homeworld",
                  "films",
                  "species",
                  "vehicles",
                  "starships"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved people",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of People",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.People"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single person.",
        "tags": [
          "{i18n>People}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "height",
                  "mass",
                  "hair_color",
                  "skin_color",
                  "eye_color",
                  "birth_year",
                  "gender",
                  "scoundrel",
                  "homeworld_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "homeworld",
                  "films",
                  "species",
                  "vehicles",
                  "starships"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People({ID})/films": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of films of a {i18n> people}.",
        "tags": [
          "{i18n>People}",
          "Film2People"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "people_ID",
                  "people_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "people_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "people"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved films",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2People",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2People"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single film of a {i18n> people}.",
        "tags": [
          "{i18n>People}",
          "Film2People"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2People-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People({ID})/homeworld": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve homeworld of a {i18n> people}.",
        "tags": [
          "{i18n>People}",
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "diameter",
                  "rotation_period",
                  "orbital_period",
                  "gravity",
                  "population",
                  "climate",
                  "terrain",
                  "surface_water",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "residents",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved homeworld",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People({ID})/homeworld/StarWarsPlanet.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "{i18n>People}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ]
      }
    },
    "/People({ID})/homeworld/StarWarsPlanet.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "{i18n>People}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/People({ID})/homeworld/StarWarsPlanet.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>People}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/People({ID})/species": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of species of a {i18n> people}.",
        "tags": [
          "{i18n>People}",
          "Species2People"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "species_ID",
                  "species_ID desc",
                  "people_ID",
                  "people_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "species_ID",
                  "people_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "people"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved species",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Species2People",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Species2People"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single species of a {i18n> people}.",
        "tags": [
          "{i18n>People}",
          "Species2People"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Species2People-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created species",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Species2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People({ID})/starships": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of starships of a {i18n> people}.",
        "tags": [
          "{i18n>People}",
          "Starship2Pilot"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "starship_ID",
                  "starship_ID desc",
                  "pilot_ID",
                  "pilot_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "starship_ID",
                  "pilot_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "starship",
                  "pilot"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved starships",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Starship2Pilot",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single starship of a {i18n> people}.",
        "tags": [
          "{i18n>People}",
          "Starship2Pilot"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created starship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People({ID})/vehicles": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of vehicles of a {i18n> people}.",
        "tags": [
          "{i18n>People}",
          "Vehicle2Pilot"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "vehicle_ID",
                  "vehicle_ID desc",
                  "pilot_ID",
                  "pilot_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "vehicle_ID",
                  "pilot_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "vehicle",
                  "pilot"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved vehicles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Vehicle2Pilot",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single vehicle of a {i18n> people}.",
        "tags": [
          "{i18n>People}",
          "Vehicle2Pilot"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet": {
      "get": {
        "summary": "Retrieve a list of planet.",
        "tags": [
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "name",
                  "name desc",
                  "diameter",
                  "diameter desc",
                  "rotation_period",
                  "rotation_period desc",
                  "orbital_period",
                  "orbital_period desc",
                  "gravity",
                  "gravity desc",
                  "population",
                  "population desc",
                  "climate",
                  "climate desc",
                  "terrain",
                  "terrain desc",
                  "surface_water",
                  "surface_water desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "diameter",
                  "rotation_period",
                  "orbital_period",
                  "gravity",
                  "population",
                  "climate",
                  "terrain",
                  "surface_water",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "residents",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved planet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Planet",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single planet.",
        "tags": [
          "{i18n>Planet}"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Planet-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created planet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single planet.",
        "tags": [
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "diameter",
                  "rotation_period",
                  "orbital_period",
                  "gravity",
                  "population",
                  "climate",
                  "terrain",
                  "surface_water",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "residents",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved planet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single planet.",
        "tags": [
          "{i18n>Planet}"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Planet-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single planet.",
        "tags": [
          "{i18n>Planet}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve draft administrative data of a {i18n> planet}.",
        "tags": [
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change draft administrative data of a {i18n> planet}.",
        "tags": [
          "{i18n>Planet}"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete draft administrative data of a {i18n> planet}.",
        "tags": [
          "{i18n>Planet}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve sibling entity of a {i18n> planet}.",
        "tags": [
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "diameter",
                  "rotation_period",
                  "orbital_period",
                  "gravity",
                  "population",
                  "climate",
                  "terrain",
                  "surface_water",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "residents",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/StarWarsPlanet.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "{i18n>Planet}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/StarWarsPlanet.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "{i18n>Planet}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/StarWarsPlanet.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>Planet}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')/StarWarsPlanet.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "{i18n>Planet}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')/StarWarsPlanet.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "{i18n>Planet}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')/StarWarsPlanet.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>Planet}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')/films": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of films of a {i18n> planet}.",
        "tags": [
          "{i18n>Planet}",
          "Film2Planets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "planet_ID",
                  "planet_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "planet_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "planet",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved films",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Planets",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single film of a {i18n> planet}.",
        "tags": [
          "{i18n>Planet}",
          "Film2Planets"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet(ID={ID},IsActiveEntity='{IsActiveEntity}')/residents": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of residents of a {i18n> planet}.",
        "tags": [
          "{i18n>Planet}",
          "Planet2People"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "planet_ID",
                  "planet_ID desc",
                  "people_ID",
                  "people_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "planet_ID",
                  "people_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "planet",
                  "people",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved residents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Planet2People",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Planet2People"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single resident of a {i18n> planet}.",
        "tags": [
          "{i18n>Planet}",
          "Planet2People"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Planet2People-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created resident",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Planet2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet2People": {
      "get": {
        "summary": "Retrieve a list of planet2 people.",
        "tags": [
          "Planet2People"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "planet_ID",
                  "planet_ID desc",
                  "people_ID",
                  "people_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "planet_ID",
                  "people_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "planet",
                  "people",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved planet2 people",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Planet2People",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Planet2People"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single planet2 person.",
        "tags": [
          "Planet2People"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Planet2People-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created planet2 person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Planet2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet2People(ID={ID},IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single planet2 person.",
        "tags": [
          "Planet2People"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "planet_ID",
                  "people_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "planet",
                  "people",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved planet2 person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Planet2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single planet2 person.",
        "tags": [
          "Planet2People"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Planet2People-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single planet2 person.",
        "tags": [
          "Planet2People"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet2People(ID={ID},IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve draft administrative data of a planet2 person.",
        "tags": [
          "Planet2People"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change draft administrative data of a planet2 person.",
        "tags": [
          "Planet2People"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete draft administrative data of a planet2 person.",
        "tags": [
          "Planet2People"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet2People(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve sibling entity of a planet2 person.",
        "tags": [
          "Planet2People"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "planet_ID",
                  "people_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "planet",
                  "people",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Planet2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet2People(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/StarWarsPlanet.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "Planet2People"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet2People"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Planet2People(ID={ID},IsActiveEntity='{IsActiveEntity}')/StarWarsPlanet.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "Planet2People"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet2People"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Planet2People(ID={ID},IsActiveEntity='{IsActiveEntity}')/people": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve people of a planet2 person.",
        "tags": [
          "Planet2People",
          "{i18n>People}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "height",
                  "mass",
                  "hair_color",
                  "skin_color",
                  "eye_color",
                  "birth_year",
                  "gender",
                  "scoundrel",
                  "homeworld_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "homeworld",
                  "films",
                  "species",
                  "vehicles",
                  "starships"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved people",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet2People(ID={ID},IsActiveEntity='{IsActiveEntity}')/planet": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve planet of a planet2 person.",
        "tags": [
          "Planet2People",
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "diameter",
                  "rotation_period",
                  "orbital_period",
                  "gravity",
                  "population",
                  "climate",
                  "terrain",
                  "surface_water",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "residents",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved planet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Planet2People(ID={ID},IsActiveEntity='{IsActiveEntity}')/planet/StarWarsPlanet.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "Planet2People"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/Planet2People(ID={ID},IsActiveEntity='{IsActiveEntity}')/planet/StarWarsPlanet.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "Planet2People"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Planet2People(ID={ID},IsActiveEntity='{IsActiveEntity}')/planet/StarWarsPlanet.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "Planet2People"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StarWarsPlanet.Planet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Species2People": {
      "get": {
        "summary": "Retrieve a list of species2 people.",
        "tags": [
          "Species2People"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "species_ID",
                  "species_ID desc",
                  "people_ID",
                  "people_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "species_ID",
                  "people_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "people"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved species2 people",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Species2People",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Species2People"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single species2 person.",
        "tags": [
          "Species2People"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Species2People-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created species2 person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Species2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Species2People({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single species2 person.",
        "tags": [
          "Species2People"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "species_ID",
                  "people_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "people"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved species2 person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Species2People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single species2 person.",
        "tags": [
          "Species2People"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Species2People-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single species2 person.",
        "tags": [
          "Species2People"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Species2People({ID})/people": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve people of a species2 person.",
        "tags": [
          "Species2People",
          "{i18n>People}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "height",
                  "mass",
                  "hair_color",
                  "skin_color",
                  "eye_color",
                  "birth_year",
                  "gender",
                  "scoundrel",
                  "homeworld_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "homeworld",
                  "films",
                  "species",
                  "vehicles",
                  "starships"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved people",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Starship": {
      "get": {
        "summary": "Retrieve a list of starship.",
        "tags": [
          "{i18n>Starship}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "name",
                  "name desc",
                  "model",
                  "model desc",
                  "starship_class",
                  "starship_class desc",
                  "manufacturer",
                  "manufacturer desc",
                  "cost_in_credits",
                  "cost_in_credits desc",
                  "length",
                  "length desc",
                  "crew",
                  "crew desc",
                  "passengers",
                  "passengers desc",
                  "max_atmosphering_speed",
                  "max_atmosphering_speed desc",
                  "hyperdrive_rating",
                  "hyperdrive_rating desc",
                  "MGLT",
                  "MGLT desc",
                  "cargo_capacity",
                  "cargo_capacity desc",
                  "consumables",
                  "consumables desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "model",
                  "starship_class",
                  "manufacturer",
                  "cost_in_credits",
                  "length",
                  "crew",
                  "passengers",
                  "max_atmosphering_speed",
                  "hyperdrive_rating",
                  "MGLT",
                  "cargo_capacity",
                  "consumables"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "pilots"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved starship",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Starship",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Starship"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single starship.",
        "tags": [
          "{i18n>Starship}"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Starship-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created starship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Starship"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Starship({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single starship.",
        "tags": [
          "{i18n>Starship}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "model",
                  "starship_class",
                  "manufacturer",
                  "cost_in_credits",
                  "length",
                  "crew",
                  "passengers",
                  "max_atmosphering_speed",
                  "hyperdrive_rating",
                  "MGLT",
                  "cargo_capacity",
                  "consumables"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "pilots"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved starship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Starship"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single starship.",
        "tags": [
          "{i18n>Starship}"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Starship-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single starship.",
        "tags": [
          "{i18n>Starship}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Starship({ID})/films": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of films of a {i18n> starship}.",
        "tags": [
          "{i18n>Starship}",
          "Film2Starships"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "starship_ID",
                  "starship_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "starship_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "starship"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved films",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Starships",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single film of a {i18n> starship}.",
        "tags": [
          "{i18n>Starship}",
          "Film2Starships"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Starship({ID})/pilots": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of pilots of a {i18n> starship}.",
        "tags": [
          "{i18n>Starship}",
          "Starship2Pilot"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "starship_ID",
                  "starship_ID desc",
                  "pilot_ID",
                  "pilot_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "starship_ID",
                  "pilot_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "starship",
                  "pilot"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved pilots",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Starship2Pilot",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single pilot of a {i18n> starship}.",
        "tags": [
          "{i18n>Starship}",
          "Starship2Pilot"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created pilot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Starship2Pilot": {
      "get": {
        "summary": "Retrieve a list of starship2 pilot.",
        "tags": [
          "Starship2Pilot"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "starship_ID",
                  "starship_ID desc",
                  "pilot_ID",
                  "pilot_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "starship_ID",
                  "pilot_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "starship",
                  "pilot"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved starship2 pilot",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Starship2Pilot",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single starship2 pilot.",
        "tags": [
          "Starship2Pilot"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created starship2 pilot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Starship2Pilot({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single starship2 pilot.",
        "tags": [
          "Starship2Pilot"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "starship_ID",
                  "pilot_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "starship",
                  "pilot"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved starship2 pilot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single starship2 pilot.",
        "tags": [
          "Starship2Pilot"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single starship2 pilot.",
        "tags": [
          "Starship2Pilot"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Starship2Pilot({ID})/pilot": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve pilot of a starship2 pilot.",
        "tags": [
          "Starship2Pilot",
          "{i18n>People}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "height",
                  "mass",
                  "hair_color",
                  "skin_color",
                  "eye_color",
                  "birth_year",
                  "gender",
                  "scoundrel",
                  "homeworld_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "homeworld",
                  "films",
                  "species",
                  "vehicles",
                  "starships"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved pilot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Starship2Pilot({ID})/starship": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve starship of a starship2 pilot.",
        "tags": [
          "Starship2Pilot",
          "{i18n>Starship}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "model",
                  "starship_class",
                  "manufacturer",
                  "cost_in_credits",
                  "length",
                  "crew",
                  "passengers",
                  "max_atmosphering_speed",
                  "hyperdrive_rating",
                  "MGLT",
                  "cargo_capacity",
                  "consumables"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "pilots"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved starship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Starship"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Vehicle2Pilot": {
      "get": {
        "summary": "Retrieve a list of vehicle2 pilot.",
        "tags": [
          "Vehicle2Pilot"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "vehicle_ID",
                  "vehicle_ID desc",
                  "pilot_ID",
                  "pilot_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "vehicle_ID",
                  "pilot_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "vehicle",
                  "pilot"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved vehicle2 pilot",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Vehicle2Pilot",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single vehicle2 pilot.",
        "tags": [
          "Vehicle2Pilot"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created vehicle2 pilot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Vehicle2Pilot({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single vehicle2 pilot.",
        "tags": [
          "Vehicle2Pilot"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "vehicle_ID",
                  "pilot_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "vehicle",
                  "pilot"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved vehicle2 pilot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single vehicle2 pilot.",
        "tags": [
          "Vehicle2Pilot"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single vehicle2 pilot.",
        "tags": [
          "Vehicle2Pilot"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Vehicle2Pilot({ID})/pilot": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve pilot of a vehicle2 pilot.",
        "tags": [
          "Vehicle2Pilot",
          "{i18n>People}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "height",
                  "mass",
                  "hair_color",
                  "skin_color",
                  "eye_color",
                  "birth_year",
                  "gender",
                  "scoundrel",
                  "homeworld_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "homeworld",
                  "films",
                  "species",
                  "vehicles",
                  "starships"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved pilot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.People"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Vehicle2Pilot({ID})/vehicle": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve vehicle of a vehicle2 pilot.",
        "tags": [
          "Vehicle2Pilot",
          "{i18n>Vehicles}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "model",
                  "vehicle_class",
                  "manufacturer",
                  "cost_in_credits",
                  "length",
                  "crew",
                  "passengers",
                  "max_atmosphering_speed",
                  "cargo_capacity",
                  "consumables"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "pilots"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Vehicles"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Vehicles": {
      "get": {
        "summary": "Retrieve a list of vehicles.",
        "tags": [
          "{i18n>Vehicles}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "name",
                  "name desc",
                  "model",
                  "model desc",
                  "vehicle_class",
                  "vehicle_class desc",
                  "manufacturer",
                  "manufacturer desc",
                  "cost_in_credits",
                  "cost_in_credits desc",
                  "length",
                  "length desc",
                  "crew",
                  "crew desc",
                  "passengers",
                  "passengers desc",
                  "max_atmosphering_speed",
                  "max_atmosphering_speed desc",
                  "cargo_capacity",
                  "cargo_capacity desc",
                  "consumables",
                  "consumables desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "model",
                  "vehicle_class",
                  "manufacturer",
                  "cost_in_credits",
                  "length",
                  "crew",
                  "passengers",
                  "max_atmosphering_speed",
                  "cargo_capacity",
                  "consumables"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "pilots"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved vehicles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Vehicles",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Vehicles"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single vehicle.",
        "tags": [
          "{i18n>Vehicles}"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Vehicles-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Vehicles"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Vehicles({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single vehicle.",
        "tags": [
          "{i18n>Vehicles}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "model",
                  "vehicle_class",
                  "manufacturer",
                  "cost_in_credits",
                  "length",
                  "crew",
                  "passengers",
                  "max_atmosphering_speed",
                  "cargo_capacity",
                  "consumables"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "films",
                  "pilots"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Vehicles"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single vehicle.",
        "tags": [
          "{i18n>Vehicles}"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Vehicles-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single vehicle.",
        "tags": [
          "{i18n>Vehicles}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Vehicles({ID})/films": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of films of a {i18n> vehicles}.",
        "tags": [
          "{i18n>Vehicles}",
          "Film2Vehicles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "film_ID",
                  "film_ID desc",
                  "vehicle_ID",
                  "vehicle_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "film_ID",
                  "vehicle_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "film",
                  "vehicle"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved films",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Film2Vehicles",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single film of a {i18n> vehicles}.",
        "tags": [
          "{i18n>Vehicles}",
          "Film2Vehicles"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Vehicles({ID})/pilots": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of pilots of a {i18n> vehicles}.",
        "tags": [
          "{i18n>Vehicles}",
          "Vehicle2Pilot"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "vehicle_ID",
                  "vehicle_ID desc",
                  "pilot_ID",
                  "pilot_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "vehicle_ID",
                  "pilot_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "vehicle",
                  "pilot"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved pilots",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Vehicle2Pilot",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single pilot of a {i18n> vehicles}.",
        "tags": [
          "{i18n>Vehicles}",
          "Vehicle2Pilot"
        ],
        "requestBody": {
          "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created pilot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/climate": {
      "get": {
        "summary": "Retrieve a list of climate.",
        "tags": [
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "climate",
                  "climate desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "climate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved climate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of climate",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.climate"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/climate('{climate}')": {
      "parameters": [
        {
          "description": "key: climate",
          "in": "path",
          "name": "climate",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single climate.",
        "tags": [
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "climate"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved climate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.climate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/terrain": {
      "get": {
        "summary": "Retrieve a list of terrain.",
        "tags": [
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "terrain",
                  "terrain desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "terrain"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved terrain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of terrain",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarWarsPlanet.terrain"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/terrain('{terrain}')": {
      "parameters": [
        {
          "description": "key: terrain",
          "in": "path",
          "name": "terrain",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single terrain.",
        "tags": [
          "{i18n>Planet}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "terrain"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved terrain",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarWarsPlanet.terrain"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "StarWarsPlanet.DraftAdministrativeData": {
        "title": "DraftAdministrativeData",
        "type": "object",
        "properties": {
          "DraftUUID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "StarWarsPlanet.DraftAdministrativeData-create": {
        "title": "DraftAdministrativeData (for create)",
        "type": "object",
        "properties": {
          "DraftUUID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "DraftUUID"
        ]
      },
      "StarWarsPlanet.DraftAdministrativeData-update": {
        "title": "DraftAdministrativeData (for update)",
        "type": "object",
        "properties": {
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "StarWarsPlanet.Film": {
        "title": "All Films in the Star Wars Skywalker Saga",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "episode_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "opening_crawl": {
            "type": "string",
            "nullable": true
          },
          "director": {
            "type": "string",
            "nullable": true
          },
          "producer": {
            "type": "string",
            "nullable": true
          },
          "release_date": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "characters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Film2People"
            }
          },
          "characters@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "planets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
            }
          },
          "planets@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "starships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships"
            }
          },
          "starships@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles"
            }
          },
          "vehicles@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "species": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Film2Species"
            }
          },
          "species@odata.count": {
            "$ref": "#/components/schemas/count"
          }
        },
        "description": "All Films in the Star Wars Skywalker Saga"
      },
      "StarWarsPlanet.Film2People": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "film": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Film"
              }
            ],
            "nullable": true
          },
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "people": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.People"
              }
            ],
            "nullable": true
          },
          "people_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2People-create": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for create)",
        "type": "object",
        "properties": {
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "people_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2People-update": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for update)",
        "type": "object",
        "properties": {
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "people_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Planets": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "film": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Film"
              }
            ],
            "nullable": true
          },
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "planet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Planet"
              }
            ],
            "nullable": true
          },
          "planet_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
              }
            ],
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Planets-create": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for create)",
        "type": "object",
        "properties": {
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "planet_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "IsActiveEntity"
        ],
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Planets-update": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for update)",
        "type": "object",
        "properties": {
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "planet_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Species": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "film": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Film"
              }
            ],
            "nullable": true
          },
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "specie_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Species-create": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for create)",
        "type": "object",
        "properties": {
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "specie_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Species-update": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for update)",
        "type": "object",
        "properties": {
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "specie_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Starships": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "film": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Film"
              }
            ],
            "nullable": true
          },
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "starship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Starship"
              }
            ],
            "nullable": true
          },
          "starship_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Starships-create": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for create)",
        "type": "object",
        "properties": {
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "starship_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Starships-update": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for update)",
        "type": "object",
        "properties": {
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "starship_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Vehicles": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "film": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Film"
              }
            ],
            "nullable": true
          },
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Vehicles"
              }
            ],
            "nullable": true
          },
          "vehicle_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Vehicles-create": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for create)",
        "type": "object",
        "properties": {
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "vehicle_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Film2Vehicles-update": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for update)",
        "type": "object",
        "properties": {
          "film_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "vehicle_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.People": {
        "title": "All People and Aliens in Star Wars",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "string",
            "nullable": true,
            "default": "Test"
          },
          "mass": {
            "type": "string",
            "nullable": true
          },
          "hair_color": {
            "type": "string",
            "nullable": true,
            "description": "Person's Hair Color"
          },
          "skin_color": {
            "type": "string",
            "nullable": true
          },
          "eye_color": {
            "type": "string",
            "nullable": true
          },
          "birth_year": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "scoundrel": {
            "type": "boolean",
            "nullable": true,
            "default": false
          },
          "homeworld": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Planet"
              }
            ],
            "nullable": true
          },
          "homeworld_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "films": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Film2People"
            }
          },
          "films@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "species": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Species2People"
            }
          },
          "species@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot"
            }
          },
          "vehicles@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "starships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot"
            }
          },
          "starships@odata.count": {
            "$ref": "#/components/schemas/count"
          }
        },
        "description": "All People and Aliens in Star Wars"
      },
      "StarWarsPlanet.Planet": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "diameter": {
            "type": "string",
            "nullable": true
          },
          "rotation_period": {
            "type": "string",
            "nullable": true
          },
          "orbital_period": {
            "type": "string",
            "nullable": true
          },
          "gravity": {
            "type": "string",
            "nullable": true
          },
          "population": {
            "type": "string",
            "nullable": true
          },
          "climate": {
            "type": "string",
            "nullable": true
          },
          "terrain": {
            "type": "string",
            "nullable": true
          },
          "surface_water": {
            "type": "string",
            "nullable": true
          },
          "films": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Film2Planets"
            }
          },
          "films@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "residents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Planet2People"
            }
          },
          "residents@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Planet"
              }
            ],
            "nullable": true
          }
        },
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "StarWarsPlanet.Planet-create": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed (for create)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "diameter": {
            "type": "string",
            "nullable": true
          },
          "rotation_period": {
            "type": "string",
            "nullable": true
          },
          "orbital_period": {
            "type": "string",
            "nullable": true
          },
          "gravity": {
            "type": "string",
            "nullable": true
          },
          "population": {
            "type": "string",
            "nullable": true
          },
          "climate": {
            "type": "string",
            "nullable": true
          },
          "terrain": {
            "type": "string",
            "nullable": true
          },
          "surface_water": {
            "type": "string",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "IsActiveEntity"
        ],
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "StarWarsPlanet.Planet-update": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "diameter": {
            "type": "string",
            "nullable": true
          },
          "rotation_period": {
            "type": "string",
            "nullable": true
          },
          "orbital_period": {
            "type": "string",
            "nullable": true
          },
          "gravity": {
            "type": "string",
            "nullable": true
          },
          "population": {
            "type": "string",
            "nullable": true
          },
          "climate": {
            "type": "string",
            "nullable": true
          },
          "terrain": {
            "type": "string",
            "nullable": true
          },
          "surface_water": {
            "type": "string",
            "nullable": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          }
        },
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "StarWarsPlanet.Planet2People": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "planet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Planet"
              }
            ],
            "nullable": true
          },
          "planet_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "people": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.People"
              }
            ],
            "nullable": true
          },
          "people_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Planet2People"
              }
            ],
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Planet2People-create": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for create)",
        "type": "object",
        "properties": {
          "planet_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "people_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "IsActiveEntity"
        ],
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Planet2People-update": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for update)",
        "type": "object",
        "properties": {
          "planet_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "people_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Species2People": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "species_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "people": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.People"
              }
            ],
            "nullable": true
          },
          "people_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Species2People-create": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for create)",
        "type": "object",
        "properties": {
          "species_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "people_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Species2People-update": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for update)",
        "type": "object",
        "properties": {
          "species_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "people_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Starship": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "starship_class": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "cost_in_credits": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "string",
            "nullable": true
          },
          "crew": {
            "type": "string",
            "nullable": true
          },
          "passengers": {
            "type": "string",
            "nullable": true
          },
          "max_atmosphering_speed": {
            "type": "string",
            "nullable": true
          },
          "hyperdrive_rating": {
            "type": "string",
            "nullable": true
          },
          "MGLT": {
            "type": "string",
            "nullable": true
          },
          "cargo_capacity": {
            "type": "string",
            "nullable": true
          },
          "consumables": {
            "type": "string",
            "nullable": true
          },
          "films": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Film2Starships"
            }
          },
          "films@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "pilots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Starship2Pilot"
            }
          },
          "pilots@odata.count": {
            "$ref": "#/components/schemas/count"
          }
        },
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "StarWarsPlanet.Starship-create": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed (for create)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "starship_class": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "cost_in_credits": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "string",
            "nullable": true
          },
          "crew": {
            "type": "string",
            "nullable": true
          },
          "passengers": {
            "type": "string",
            "nullable": true
          },
          "max_atmosphering_speed": {
            "type": "string",
            "nullable": true
          },
          "hyperdrive_rating": {
            "type": "string",
            "nullable": true
          },
          "MGLT": {
            "type": "string",
            "nullable": true
          },
          "cargo_capacity": {
            "type": "string",
            "nullable": true
          },
          "consumables": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "StarWarsPlanet.Starship-update": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "starship_class": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "cost_in_credits": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "string",
            "nullable": true
          },
          "crew": {
            "type": "string",
            "nullable": true
          },
          "passengers": {
            "type": "string",
            "nullable": true
          },
          "max_atmosphering_speed": {
            "type": "string",
            "nullable": true
          },
          "hyperdrive_rating": {
            "type": "string",
            "nullable": true
          },
          "MGLT": {
            "type": "string",
            "nullable": true
          },
          "cargo_capacity": {
            "type": "string",
            "nullable": true
          },
          "consumables": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "StarWarsPlanet.Starship2Pilot": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "starship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Starship"
              }
            ],
            "nullable": true
          },
          "starship_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "pilot": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.People"
              }
            ],
            "nullable": true
          },
          "pilot_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Starship2Pilot-create": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for create)",
        "type": "object",
        "properties": {
          "starship_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "pilot_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Starship2Pilot-update": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for update)",
        "type": "object",
        "properties": {
          "starship_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "pilot_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Vehicle2Pilot": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.Vehicles"
              }
            ],
            "nullable": true
          },
          "vehicle_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "pilot": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StarWarsPlanet.People"
              }
            ],
            "nullable": true
          },
          "pilot_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Vehicle2Pilot-create": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for create)",
        "type": "object",
        "properties": {
          "vehicle_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "pilot_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Vehicle2Pilot-update": {
        "title": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid (for update)",
        "type": "object",
        "properties": {
          "vehicle_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "pilot_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        },
        "description": "Aspect for entities with canonical universal IDs\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-cuid"
      },
      "StarWarsPlanet.Vehicles": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "vehicle_class": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "cost_in_credits": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "string",
            "nullable": true
          },
          "crew": {
            "type": "string",
            "nullable": true
          },
          "passengers": {
            "type": "string",
            "nullable": true
          },
          "max_atmosphering_speed": {
            "type": "string",
            "nullable": true
          },
          "cargo_capacity": {
            "type": "string",
            "nullable": true
          },
          "consumables": {
            "type": "string",
            "nullable": true
          },
          "films": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Film2Vehicles"
            }
          },
          "films@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "pilots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarWarsPlanet.Vehicle2Pilot"
            }
          },
          "pilots@odata.count": {
            "$ref": "#/components/schemas/count"
          }
        },
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "StarWarsPlanet.Vehicles-create": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed (for create)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "vehicle_class": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "cost_in_credits": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "string",
            "nullable": true
          },
          "crew": {
            "type": "string",
            "nullable": true
          },
          "passengers": {
            "type": "string",
            "nullable": true
          },
          "max_atmosphering_speed": {
            "type": "string",
            "nullable": true
          },
          "cargo_capacity": {
            "type": "string",
            "nullable": true
          },
          "consumables": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "StarWarsPlanet.Vehicles-update": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "vehicle_class": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "cost_in_credits": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "string",
            "nullable": true
          },
          "crew": {
            "type": "string",
            "nullable": true
          },
          "passengers": {
            "type": "string",
            "nullable": true
          },
          "max_atmosphering_speed": {
            "type": "string",
            "nullable": true
          },
          "cargo_capacity": {
            "type": "string",
            "nullable": true
          },
          "consumables": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "StarWarsPlanet.climate": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
        "type": "object",
        "properties": {
          "climate": {
            "type": "string"
          }
        },
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "StarWarsPlanet.terrain": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
        "type": "object",
        "properties": {
          "terrain": {
            "type": "string"
          }
        },
        "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}